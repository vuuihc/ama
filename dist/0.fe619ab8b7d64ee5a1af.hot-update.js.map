{"version":3,"sources":["webpack:///0.fe619ab8b7d64ee5a1af.hot-update.js","webpack:///./src/javascripts/containers/pages/Answer.js?f3d4"],"names":["webpackHotUpdate","106","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_react","_react2","_reactDom","_reactDom2","_reactRouter","_reactRedux","_question","_account","_config","_time","_time2","_VoiceWave","_VoiceWave2","_toast","_toast2","_config2","Answer","_Component","this","_this","getPrototypeOf","state","localId","status","answerSuccess","successTimer","START","END","clickHandler","bind","routerWillLeave","id","params","getQuestionInfo","refreshWXConfig","console","log","questionInfo","talkBtn","findDOMNode","refs","roundContainer","wx","ready","sessionStorage","allowRecord","startRecord","success","recordTimer","setTimeout","stopRecord","cancel","alert","addEventListener","onVoicePlayEnd","res","setState","router","setRouteLeaveHook","route","nextLocation","nextProps","JSON","stringify","WXConfig","data","timestamp","now","Date","valueOf","jsApiList","newWxConfig","debug","appId","toString","nonceStr","signature","config","clearTimeout","removeEventListener","url","landPage","location","href","getWXConfig","event","recordStartHandler","preventDefault","getTime","recordStopHandler","fail","playStartHandler","playVoice","playStopHandler","stopVoice","passHandler","serverId","questionId","_fetch","fetch","domain","credentials","method","headers","Accept","Content-Type","server_id","question_id","then","json","errCode","getAskedMe","browserHistory","push","baseUrl","msg","uploadVoice","isShowProgressTips","saveVoice","playing","classNames","0","1","2","3","4","5","Tips","createElement","className","show","icon","Link","to","user_id","src","user_face","user_name","question_prize","question_content","getTimeSpan","question_time","ref","onClick","reRecord","confirmAnswer","Component","withRouter","contextTypes","PropTypes","object","mapStateToProps","saveVoiceInfo","connect"],"mappings":"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","file":"0.fe619ab8b7d64ee5a1af.hot-update.js","sourcesContent":["webpackHotUpdate(0,{\n\n/***/ 106:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(38);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _reactRouter = __webpack_require__(6);\n\t\n\tvar _reactRedux = __webpack_require__(7);\n\t\n\t__webpack_require__(157);\n\t\n\tvar _question = __webpack_require__(20);\n\t\n\tvar _account = __webpack_require__(12);\n\t\n\tvar _config = __webpack_require__(63);\n\t\n\tvar _time = __webpack_require__(67);\n\t\n\tvar _time2 = _interopRequireDefault(_time);\n\t\n\tvar _VoiceWave = __webpack_require__(64);\n\t\n\tvar _VoiceWave2 = _interopRequireDefault(_VoiceWave);\n\t\n\tvar _toast = __webpack_require__(21);\n\t\n\tvar _toast2 = _interopRequireDefault(_toast);\n\t\n\tvar _config2 = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Answer = function (_Component) {\n\t  _inherits(Answer, _Component);\n\t\n\t  function Answer() {\n\t    _classCallCheck(this, Answer);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Answer).call(this));\n\t\n\t    _this.state = {\n\t      localId: null,\n\t      status: 0, //0:话筒等待录音，1：等待微信发起录音，2：录音中，3：等待微信停止录音，4：等待播放，5：播放中\n\t      answerSuccess: false,\n\t      successTimer: null,\n\t      START: 0,\n\t      END: 0\n\t    };\n\t    _this.clickHandler = _this.clickHandler.bind(_this);\n\t    _this.routerWillLeave = _this.routerWillLeave.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Answer, [{\n\t    key: 'componentWillMount',\n\t    value: function componentWillMount() {\n\t      var id = this.props.params.id;\n\t\n\t      this.props.getQuestionInfo(id);\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.refreshWXConfig();\n\t      console.log(this.props.questionInfo);\n\t      var talkBtn = _reactDom2.default.findDOMNode(this.refs.roundContainer);\n\t      var self = this;\n\t      wx.ready(function () {\n\t        console.log(\"allowRecord\" + sessionStorage.allowRecord);\n\t        if (!sessionStorage.allowRecord || sessionStorage.allowRecord !== 'true') {\n\t          wx.startRecord({\n\t            success: function success() {\n\t              sessionStorage.allowRecord = true;\n\t              self.recordTimer = setTimeout(function () {\n\t                wx.stopRecord();\n\t              }, 500);\n\t              console.log(\"here\");\n\t            },\n\t            cancel: function cancel() {\n\t              alert('用户拒绝授权录音');\n\t            }\n\t          });\n\t        }\n\t        talkBtn.addEventListener('click', self.clickHandler, false);\n\t      });\n\t      wx.onVoicePlayEnd({\n\t        success: function success(res) {\n\t          self.setState({ status: 4 });\n\t        }\n\t      });\n\t      this.props.router.setRouteLeaveHook(this.props.route, this.routerWillLeave);\n\t    }\n\t  }, {\n\t    key: 'routerWillLeave',\n\t    value: function routerWillLeave(nextLocation) {\n\t      // return false to prevent a transition w/o prompting the user,\n\t      // or return a string to allow the user to decide:\n\t      if (!this.state.answerSuccess) {\n\t        return '您的回答尚未完成，确认离开?';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      console.log(\"nextProps.WXConfig.data==\" + JSON.stringify(nextProps.WXConfig.data));\n\t      if (nextProps.WXConfig.data.timestamp) {\n\t        var now = new Date().valueOf();\n\t        console.log(\"now===\" + now / 1000);\n\t        console.log(\"timestamp===\" + nextProps.WXConfig.data.timestamp);\n\t        if (now / 1000 - nextProps.WXConfig.data.timestamp < 3) {\n\t          console.log(\"into config===\");\n\t          var jsApiList = ['startRecord', 'stopRecord', 'onVoiceRecordEnd', 'playVoice', 'pauseVoice', 'stopVoice', 'onVoicePlayEnd', 'uploadVoice', 'chooseWXPay'];\n\t          var newWxConfig = {};\n\t          console.log(\"newWxConfig\");\n\t          newWxConfig['debug'] = false;\n\t          newWxConfig['appId'] = nextProps.WXConfig.data['appId'];\n\t          newWxConfig['timestamp'] = nextProps.WXConfig.data.timestamp.toString();\n\t          newWxConfig['nonceStr'] = nextProps.WXConfig.data['nonceStr'];\n\t          newWxConfig['signature'] = nextProps.WXConfig.data['signature'];\n\t          newWxConfig['jsApiList'] = jsApiList;\n\t          console.log(\"newWxConfig\" + JSON.stringify(newWxConfig));\n\t          wx.config(newWxConfig);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      var self = this;\n\t      clearTimeout(this.state.successTimer);\n\t      var talkBtn = _reactDom2.default.findDOMNode(this.refs.roundContainer);\n\t      wx.ready(function () {\n\t        talkBtn.removeEventListener('click', self.clickHandler, false);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'refreshWXConfig',\n\t    value: function refreshWXConfig() {\n\t      var url = this.props.landPage || location.href;\n\t      console.log(\"now get wxconfig for url===\" + url);\n\t      this.props.getWXConfig(url);\n\t    }\n\t  }, {\n\t    key: 'clickHandler',\n\t    value: function clickHandler(event) {\n\t      // var localId,START,END,recordTimer;\n\t      var self = this;\n\t      var recordStartHandler = function recordStartHandler(event) {\n\t        event.preventDefault();\n\t        wx.startRecord({\n\t          success: function success() {\n\t            var START = new Date().getTime();\n\t            self.setState({ START: START, status: 2 });\n\t            console.log(\"start at ===\" + START);\n\t          },\n\t          cancel: function cancel() {\n\t            alert('用户拒绝授权录音');\n\t            self.setState({ status: 0 });\n\t          }\n\t        });\n\t      };\n\t      var recordStopHandler = function recordStopHandler(event) {\n\t        // event.preventDefault();\n\t        var END = new Date().getTime();\n\t        console.log(\"录音时间\" + (END - self.state.START));\n\t        if (END - self.state.START < 1000) {\n\t          END = 0;\n\t          alert(\"录音不能小于1秒哦\");\n\t          wx.stopRecord();\n\t          self.setState({ status: 0 });\n\t          return null;\n\t        } else {\n\t          console.log(\"录音时间\" + (END - self.state.START));\n\t          wx.stopRecord({\n\t            success: function success(res) {\n\t              var localId = res.localId;\n\t              self.setState({ localId: localId, status: 4 });\n\t            },\n\t            fail: function fail(res) {\n\t              alert(JSON.stringify(res));\n\t            }\n\t          });\n\t        }\n\t      };\n\t      var playStartHandler = function playStartHandler(event) {\n\t        event.preventDefault();\n\t        wx.playVoice({\n\t          localId: self.state.localId // 需要播放的音频的本地ID，由stopRecord接口获得\n\t        });\n\t      };\n\t      var playStopHandler = function playStopHandler(event) {\n\t        event.preventDefault();\n\t        wx.stopVoice({\n\t          localId: self.state.localId // 需要停止的音频的本地ID，由stopRecord接口获得\n\t        });\n\t      };\n\t      var passHandler = function passHandler(event) {\n\t        console.log(\"wait for wx\");\n\t      };\n\t      switch (self.state.status) {\n\t        case 0:\n\t          /*话筒等待录音*/\n\t          self.setState({ status: 1 });\n\t          recordStartHandler(event);\n\t          break;\n\t        case 1:\n\t          /*等待微信发起录音*/\n\t          passHandler(event);\n\t          break;\n\t        case 2:\n\t          /*录音中*/\n\t          self.setState({ status: 3 });\n\t          recordStopHandler(event);\n\t          break;\n\t        case 3:\n\t          /*等待微信停止录音*/\n\t          passHandler(event);\n\t          break;\n\t        case 4:\n\t          /*等待播放*/\n\t          self.setState({ status: 5 });\n\t          playStartHandler(event);\n\t          break;\n\t        case 5:\n\t          /*播放中*/\n\t          playStopHandler(event);\n\t          self.setState({ status: 4 });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'saveVoice',\n\t    value: function saveVoice(serverId, questionId) {\n\t      var _fetch;\n\t\n\t      var self = this;\n\t      fetch(_config2.domain + '/api/v1/answer/answer', (_fetch = {\n\t        credentials: 'same-origin',\n\t        method: 'post',\n\t        headers: {\n\t          'Accept': 'application/json',\n\t          'Content-Type': 'application/json'\n\t        }\n\t      }, _defineProperty(_fetch, 'credentials', 'same-origin'), _defineProperty(_fetch, 'body', JSON.stringify({\n\t        server_id: serverId,\n\t        question_id: questionId\n\t      })), _fetch)).then(function (res) {\n\t        return res.json();\n\t      }).then(function (json) {\n\t        if (json.errCode == 0) {\n\t          self.setState({ answerSuccess: true });\n\t          self.props.getAskedMe(1, 10);\n\t          var successTimer = setTimeout(function () {\n\t            _reactRouter.browserHistory.push(_config2.baseUrl + \"account/AskedMeList\");\n\t          }, 2000);\n\t          self.setState({ successTimer: successTimer });\n\t        } else {\n\t          alert(\"抱歉，上传失败\");\n\t          console.log(\"语音上传失败，原因是\" + json.msg);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'confirmAnswer',\n\t    value: function confirmAnswer() {\n\t      var self = this;\n\t      var localId = this.state.localId;\n\t      if (localId == null) {\n\t        alert(\"请先录音哦\");\n\t        return;\n\t      }\n\t      wx.uploadVoice({\n\t        localId: localId, // 需要上传的音频的本地ID，由stopRecord接口获得\n\t        isShowProgressTips: 1, // 默认为1，显示进度提示\n\t        success: function success(res) {\n\t          console.log(\"上传成功了！\");\n\t          console.log(\"serverId is ===\" + res.serverId);\n\t          var serverId = res.serverId;\n\t          var questionId = self.props.params.id;\n\t          self.saveVoice(serverId, questionId);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'playVoice',\n\t    value: function playVoice() {\n\t      this.setState({ playing: true });\n\t    }\n\t  }, {\n\t    key: 'reRecord',\n\t    value: function reRecord() {\n\t      this.setState({ status: 0 });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var questionInfo = this.props.questionInfo;\n\t      var classNames = {\n\t        0: \" \",\n\t        1: \" \",\n\t        2: \" on\",\n\t        3: \" on\",\n\t        4: \" voice\",\n\t        5: \" voice-on\"\n\t      };\n\t      var Tips = {\n\t        0: _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          '点击录音'\n\t        ),\n\t        1: _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          '开启中'\n\t        ),\n\t        2: _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          '正在录音',\n\t          _react2.default.createElement('br', null),\n\t          '点击停止'\n\t        ),\n\t        3: _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          '停止中'\n\t        ),\n\t        4: _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          '点击试听'\n\t        ),\n\t        5: _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          '播放中'\n\t        )\n\t      };\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'accountAnswer' },\n\t        _react2.default.createElement(\n\t          _toast2.default,\n\t          { show: this.state.answerSuccess },\n\t          '回答成功'\n\t        ),\n\t        _react2.default.createElement(\n\t          _toast2.default,\n\t          { icon: 'loading', show: this.state.status == 1 },\n\t          '开启中'\n\t        ),\n\t        _react2.default.createElement(\n\t          _toast2.default,\n\t          { icon: 'loading', show: this.state.status == 3 },\n\t          '停止中'\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'question' },\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'head' },\n\t            _react2.default.createElement(\n\t              _reactRouter.Link,\n\t              { to: _config2.baseUrl + 'user/' + questionInfo.user_id },\n\t              _react2.default.createElement('img', { src: questionInfo.user_face })\n\t            ),\n\t            _react2.default.createElement(\n\t              'span',\n\t              { className: 'name' },\n\t              questionInfo.user_name\n\t            ),\n\t            _react2.default.createElement(\n\t              'span',\n\t              { className: 'price' },\n\t              '￥ ',\n\t              questionInfo.question_prize\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'stem' },\n\t            questionInfo.question_content\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'time' },\n\t            _time2.default.getTimeSpan(questionInfo.question_time),\n\t            '之前'\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'hint' },\n\t          '您的回答将被公开，答案每被偷听一次，你就赚 ￥0.3'\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'replyHint' },\n\t          Tips[this.state.status]\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { ref: 'replyContainer', className: 'replyContainer' },\n\t          _react2.default.createElement(\n\t            'div',\n\t            { ref: 'roundContainer', className: \"round-container \" + classNames[this.state.status] },\n\t            _react2.default.createElement('div', { className: 'replyIcon' }),\n\t            _react2.default.createElement('div', { className: 'recording' }),\n\t            _react2.default.createElement('div', { className: 'bubble-voice' }),\n\t            _react2.default.createElement(_VoiceWave2.default, null)\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'reRecord', onClick: this.reRecord.bind(this) },\n\t          '重录'\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'recordHint' },\n\t          this.state.localId == null ? \"点击录音按钮最多可录制60S\" : \"点击试听可试听您最近一次的回答\"\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'sendBtn', onClick: this.confirmAnswer.bind(this) },\n\t          '发送'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Answer;\n\t}(_react.Component);\n\t\n\tAnswer = (0, _reactRouter.withRouter)(Answer);\n\t\n\tAnswer.contextTypes = {\n\t  router: _react.PropTypes.object\n\t};\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  return {\n\t    questionInfo: state.questionInfo,\n\t    saveVoiceInfo: state.saveVoiceInfo,\n\t    WXConfig: state.WXConfig,\n\t    landPage: state.landPage\n\t  };\n\t};\n\t\n\tAnswer = (0, _reactRedux.connect)(mapStateToProps, { getQuestionInfo: _question.getQuestionInfo, saveVoice: _question.saveVoice, getWXConfig: _config.getWXConfig, getAskedMe: _account.getAskedMe })(Answer);\n\t\n\texports.default = Answer;\n\n/***/ }\n\n})\n\n\n/** WEBPACK FOOTER **\n ** 0.fe619ab8b7d64ee5a1af.hot-update.js\n **/","import React, {Component,PropTypes} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Link,browserHistory, withRouter } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport '../../../stylesheets/partials/modules/Answer.scss';\r\nimport { getQuestionInfo,saveVoice } from  '../../actions/question';\r\nimport { getAskedMe } from  '../../actions/account';\r\nimport { getWXConfig } from \"../../actions/config\"\r\nimport time from '../../util/time'\r\nimport VoiceWave from  \"../../components/VoiceWave\"\r\nimport Toast from \"../../util/weui/toast\"\r\nimport {baseUrl,domain} from \"../../api/config\"\r\n\r\nclass Answer extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      localId: null,\r\n      status: 0,//0:话筒等待录音，1：等待微信发起录音，2：录音中，3：等待微信停止录音，4：等待播放，5：播放中\r\n      answerSuccess: false,\r\n      successTimer:null,\r\n      START:0,\r\n      END:0,\r\n    }\r\n    this.clickHandler = this.clickHandler.bind(this)\r\n\tthis.routerWillLeave = this.routerWillLeave.bind(this)\r\n  }\r\n  componentWillMount(){\r\n    const {id} = this.props.params;\r\n    this.props.getQuestionInfo(id);\r\n  }\r\n  componentDidMount(){\r\n    this.refreshWXConfig()\r\n    console.log(this.props.questionInfo);\r\n    var talkBtn = ReactDOM.findDOMNode(this.refs.roundContainer)\r\n    const self = this\r\n    wx.ready(function(){\r\n      console.log(\"allowRecord\"+sessionStorage.allowRecord)\r\n      if(!sessionStorage.allowRecord || sessionStorage.allowRecord !== 'true'){\r\n        wx.startRecord({\r\n          success: function(){\r\n            sessionStorage.allowRecord = true;\r\n            self.recordTimer = setTimeout(function(){\r\n              wx.stopRecord();\r\n            },500);\r\n            console.log(\"here\");\r\n          },\r\n          cancel: function () {\r\n            alert('用户拒绝授权录音');\r\n          }\r\n        });\r\n      }\r\n      talkBtn.addEventListener('click',self.clickHandler,false)\r\n    })\r\n    wx.onVoicePlayEnd({\r\n      success: function (res) {\r\n        self.setState({status: 4})\r\n      }\r\n    });\r\n    this.props.router.setRouteLeaveHook(this.props.route, this.routerWillLeave)\r\n  }\r\n  routerWillLeave(nextLocation) {\r\n    // return false to prevent a transition w/o prompting the user,\r\n    // or return a string to allow the user to decide:\r\n    if(!this.state.answerSuccess){\r\n      return '您的回答尚未完成，确认离开?'\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    console.log(\"nextProps.WXConfig.data==\"+JSON.stringify(nextProps.WXConfig.data))\r\n    if(nextProps.WXConfig.data.timestamp){\r\n      const now = new Date().valueOf()\r\n      console.log(\"now===\"+now/1000)\r\n      console.log(\"timestamp===\"+nextProps.WXConfig.data.timestamp)\r\n      if(now/1000 - nextProps.WXConfig.data.timestamp<3){\r\n        console.log(\"into config===\");\r\n        const jsApiList = [\r\n          'startRecord',\r\n          'stopRecord',\r\n          'onVoiceRecordEnd',\r\n          'playVoice',\r\n          'pauseVoice',\r\n          'stopVoice',\r\n          'onVoicePlayEnd',\r\n          'uploadVoice',\r\n          'chooseWXPay'\r\n        ]\r\n        const newWxConfig = {}\r\n        console.log(\"newWxConfig\")\r\n        newWxConfig['debug'] = false;\r\n        newWxConfig['appId'] = nextProps.WXConfig.data['appId'];\r\n        newWxConfig['timestamp'] = nextProps.WXConfig.data.timestamp.toString();\r\n        newWxConfig['nonceStr'] = nextProps.WXConfig.data['nonceStr'];\r\n        newWxConfig['signature'] = nextProps.WXConfig.data['signature'];\r\n        newWxConfig['jsApiList'] = jsApiList;\r\n        console.log(\"newWxConfig\"+JSON.stringify(newWxConfig))\r\n        wx.config(newWxConfig)\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    const self =this\r\n    clearTimeout(this.state.successTimer)\r\n    var talkBtn = ReactDOM.findDOMNode(this.refs.roundContainer)\r\n    wx.ready(function(){\r\n      talkBtn.removeEventListener('click',self.clickHandler,false)\r\n  })\r\n\r\n  }\r\n  refreshWXConfig(){\r\n    const url = this.props.landPage || location.href\r\n    console.log(\"now get wxconfig for url===\"+url)\r\n    this.props.getWXConfig(url)\r\n  }\r\n  clickHandler(event){\r\n    // var localId,START,END,recordTimer;\r\n    var self = this\r\n    var recordStartHandler = function (event) {\r\n      event.preventDefault();\r\n      wx.startRecord({\r\n        success:function () {\r\n          let START = new Date().getTime();\r\n          self.setState({START:START,status:2})\r\n          console.log(\"start at ===\"+ START)\r\n        },\r\n        cancel: function () {\r\n          alert('用户拒绝授权录音');\r\n          self.setState({status:0})\r\n        }\r\n      });\r\n    }\r\n    var recordStopHandler = function (event) {\r\n      // event.preventDefault();\r\n      let END = new Date().getTime();\r\n      console.log(\"录音时间\"+(END-self.state.START));\r\n      if((END - self.state.START) < 1000){\r\n        END = 0;\r\n        alert(\"录音不能小于1秒哦\")\r\n        wx.stopRecord()\r\n        self.setState({status:0})\r\n        return null\r\n      }else{\r\n        console.log(\"录音时间\"+(END-self.state.START));\r\n        wx.stopRecord({\r\n          success: function (res) {\r\n            let localId = res.localId\r\n            self.setState({localId:localId,status:4})\r\n          },\r\n          fail: function (res) {\r\n            alert(JSON.stringify(res));\r\n          }\r\n        });\r\n      }\r\n    }\r\n    var playStartHandler = function (event) {\r\n      event.preventDefault()\r\n      wx.playVoice({\r\n        localId: self.state.localId // 需要播放的音频的本地ID，由stopRecord接口获得\r\n      });\r\n    }\r\n    var playStopHandler = function (event) {\r\n      event.preventDefault()\r\n      wx.stopVoice({\r\n        localId: self.state.localId // 需要停止的音频的本地ID，由stopRecord接口获得\r\n      });\r\n    }\r\n    var passHandler = function (event) {\r\n      console.log(\"wait for wx\")\r\n    }\r\n    switch (self.state.status) {\r\n      case 0:/*话筒等待录音*/\r\n        self.setState({status: 1})\r\n        recordStartHandler(event)\r\n        break\r\n      case 1:/*等待微信发起录音*/\r\n        passHandler(event)\r\n        break\r\n      case 2:/*录音中*/\r\n        self.setState({status:3})\r\n        recordStopHandler(event)\r\n        break\r\n      case 3:/*等待微信停止录音*/\r\n        passHandler(event)\r\n        break\r\n      case 4:/*等待播放*/\r\n        self.setState({status:5})\r\n        playStartHandler(event)\r\n        break\r\n      case 5:/*播放中*/\r\n        playStopHandler(event)\r\n        self.setState({status:4})\r\n    }\r\n    \r\n  }\r\n  saveVoice(serverId,questionId){\r\n    const self = this\r\n    fetch( `${domain}/api/v1/answer/answer`,{\r\n      credentials: 'same-origin',\r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify({\r\n        server_id:serverId,\r\n        question_id:questionId\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if(json.errCode==0){\r\n          self.setState({answerSuccess:true})\r\n          self.props.getAskedMe(1,10)\r\n          let successTimer = setTimeout(()=>{\r\n            browserHistory.push(baseUrl+\"account/AskedMeList\")\r\n          },2000)\r\n          self.setState({successTimer:successTimer})\r\n        }else{\r\n          alert(\"抱歉，上传失败\")\r\n          console.log(\"语音上传失败，原因是\"+json.msg)\r\n        }\r\n      });\r\n  }\r\n  confirmAnswer(){\r\n    const self = this\r\n    const localId = this.state.localId\r\n    if(localId==null){\r\n      alert(\"请先录音哦\")\r\n      return\r\n    }\r\n    wx.uploadVoice({\r\n      localId: localId, // 需要上传的音频的本地ID，由stopRecord接口获得\r\n      isShowProgressTips: 1, // 默认为1，显示进度提示\r\n      success: function (res) {\r\n        console.log(\"上传成功了！\")\r\n        console.log(\"serverId is ===\"+res.serverId)\r\n        const serverId = res.serverId\r\n        const questionId = self.props.params.id\r\n        self.saveVoice(serverId,questionId)\r\n      }\r\n    });\r\n    \r\n  }\r\n  playVoice(){\r\n    this.setState({playing:true})\r\n  }\r\n  reRecord(){\r\n    this.setState({status:0})\r\n  }\r\n  render() {\r\n    const questionInfo = this.props.questionInfo;\r\n    const classNames = {\r\n      0 : \" \",\r\n      1 : \" \",\r\n      2 : \" on\",\r\n      3 : \" on\",\r\n      4 : \" voice\",\r\n      5 : \" voice-on\"\r\n    }\r\n    const Tips = {\r\n      0 : <div>点击录音</div>,\r\n      1 : <div>开启中</div>,\r\n      2 : <div>正在录音<br/>点击停止</div>,\r\n      3 : <div>停止中</div>,\r\n      4 : <div>点击试听</div>,\r\n      5 : <div>播放中</div>\r\n    }\r\n    return (\r\n      <div className=\"accountAnswer\">\r\n        <Toast  show={this.state.answerSuccess} >回答成功</Toast>\r\n        <Toast  icon=\"loading\" show={this.state.status==1} >开启中</Toast>\r\n        <Toast  icon=\"loading\" show={this.state.status==3} >停止中</Toast>\r\n        <div className=\"question\">\r\n          <div className=\"head\">\r\n            <Link to={`${baseUrl}user/${questionInfo.user_id}`}><img src={questionInfo.user_face}/></Link>\r\n            <span className=\"name\">{questionInfo.user_name}</span>\r\n            <span className=\"price\">￥ {questionInfo.question_prize}</span>\r\n          </div>\r\n          <div className=\"stem\">{ questionInfo.question_content}</div>\r\n          <div className=\"time\">{time.getTimeSpan(questionInfo.question_time)}之前</div>\r\n        </div>\r\n        <div className=\"hint\">您的回答将被公开，答案每被偷听一次，你就赚 ￥0.3</div>\r\n        <div className=\"replyHint\">{Tips[this.state.status]}</div>\r\n        <div ref=\"replyContainer\" className=\"replyContainer\">\r\n          <div ref=\"roundContainer\" className={\"round-container \"+classNames[this.state.status]}>\r\n            <div className=\"replyIcon\"></div>\r\n            <div className=\"recording\"></div>\r\n            <div className=\"bubble-voice\"></div>\r\n            <VoiceWave />\r\n          </div>\r\n        </div>\r\n        <div className=\"reRecord\" onClick={this.reRecord.bind(this)}>重录</div>\r\n        <div className=\"recordHint\">{this.state.localId==null?\"点击录音按钮最多可录制60S\":\"点击试听可试听您最近一次的回答\"}</div>\r\n        <div className=\"sendBtn\" onClick={this.confirmAnswer.bind(this)}>发送</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nAnswer = withRouter(Answer)\r\n\r\nAnswer.contextTypes = {\r\n  router: PropTypes.object\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    questionInfo: state.questionInfo,\r\n    saveVoiceInfo: state.saveVoiceInfo,\r\n    WXConfig:state.WXConfig,\r\n    landPage:state.landPage\r\n  }\r\n}\r\n\r\n\r\nAnswer = connect( mapStateToProps, { getQuestionInfo,saveVoice,getWXConfig,getAskedMe })(Answer);\r\n\r\nexport default Answer;\n\n\n/** WEBPACK FOOTER **\n ** ./src/javascripts/containers/pages/Answer.js\n **/"],"sourceRoot":""}